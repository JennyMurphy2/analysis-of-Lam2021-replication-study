rowwise() %>%
mutate(single = mean(c(`1_single`,`2_single`, `3_single`,
`4_single`, `5_single`, `6_single`)),
consecutive = mean(c(`1_consecutive`,`2_consecutive`, `3_consecutive`,
`4_consecutive`, `5_consecutive`, `6_consecutive`)))
# add differences column to wide dataset
hip_agl_data_wide <- hip_agl_data_wide %>%
select(id, single, consecutive) %>%
mutate(differences =  single - consecutive)
# long dataset
hip_agl_data_long <- hip_agl_data_wide %>%
pivot_longer(cols = c("single", "consecutive"),
names_to = "conditions",
values_to = "hip_agl")
## Descriptives  ---------------
hip_agl_desc <- hip_agl_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(hip_agl),
sd = sd(hip_agl)) %>%
mutate(mean_diff = mean(hip_agl_data_long$differences),
sd_diff = sd(hip_agl_data_long$differences))
hip_agl_desc
### Outliers check --------
hip_agl_data_long %>%
identify_outliers(differences)
## Normality check  -----------
hip_agl_data_long %>% shapiro_test(differences)
## Paired t-test  -----------------------------
hip_agl_data_long$conditions <- as.factor(hip_agl_data_long$conditions)
# R compares conditions alphabetically, I am reordering here to match the original study
hip_agl_data_long$conditions <- forcats::fct_relevel(hip_agl_data_long$conditions, "single", "consecutive")
hip_agl_ttest <- t.test(hip_agl ~ conditions, hip_agl_data_long,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
hip_agl_ttest
# hip velocity --------------
hip_vel_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = hip_vel # the new column values
)
# create a new variable for the mean of trials 2 - 5 as per the original study
hip_vel_data_wide <-  hip_vel_data_wide %>%
rowwise() %>%
mutate(single = mean(c(`1_single`,`2_single`, `3_single`,
`4_single`, `5_single`, `6_single`)),
consecutive = mean(c(`1_consecutive`,`2_consecutive`, `3_consecutive`,
`4_consecutive`, `5_consecutive`, `6_consecutive`)))
# add differences column to wide dataset
hip_vel_data_wide <- hip_vel_data_wide %>%
select(id, single, consecutive) %>%
mutate(differences =  single - consecutive)
# long dataset
hip_vel_data_long <- hip_vel_data_wide %>%
pivot_longer(cols = c("single", "consecutive"),
names_to = "conditions",
values_to = "hip_vel")
## Descriptives  ---------------
hip_vel_desc <- hip_vel_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(hip_vel),
sd = sd(hip_vel)) %>%
mutate(mean_diff = mean(hip_vel_data_long$differences),
sd_diff = sd(hip_vel_data_long$differences))
hip_vel_desc
### Outliers check --------
hip_vel_data_long %>%
identify_outliers(differences)
## Normality check  -----------
hip_vel_data_long %>% shapiro_test(differences)
## Paired t-test  -----------------------------
hip_vel_data_long$conditions <- as.factor(hip_vel_data_long$conditions)
# R compares conditions alphabetically, I am reordering here to match the original study
hip_vel_data_long$conditions <- forcats::fct_relevel(hip_vel_data_long$conditions, "single", "consecutive")
hip_vel_ttest <- t.test(hip_vel ~ conditions, hip_vel_data_long,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
hip_vel_ttest
# hip momentum --------------
hip_mom_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = hip_mom # the new column values
)
# create a new variable for the mean of trials 2 - 5 as per the original study
hip_mom_data_wide <-  hip_mom_data_wide %>%
rowwise() %>%
mutate(single = mean(c(`1_single`,`2_single`, `3_single`,
`4_single`, `5_single`, `6_single`)),
consecutive = mean(c(`1_consecutive`,`2_consecutive`, `3_consecutive`,
`4_consecutive`, `5_consecutive`, `6_consecutive`)))
# add differences column to wide dataset
hip_mom_data_wide <- hip_mom_data_wide %>%
select(id, single, consecutive) %>%
mutate(differences =  single - consecutive)
# long dataset
hip_mom_data_long <- hip_mom_data_wide %>%
pivot_longer(cols = c("single", "consecutive"),
names_to = "conditions",
values_to = "hip_mom")
## Descriptives  ---------------
hip_mom_desc <- hip_mom_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(hip_mom),
sd = sd(hip_mom)) %>%
mutate(mean_diff = mean(hip_mom_data_long$differences),
sd_diff = sd(hip_mom_data_long$differences))
hip_mom_desc
### Outliers check --------
hip_mom_data_long %>%
identify_outliers(differences)
## Normality check NOT NORMAL -----------
hip_mom_data_long %>% shapiro_test(differences)
## Paired t-test  -----------------------------
hip_mom_data_long$conditions <- as.factor(hip_mom_data_long$conditions)
# R compares conditions alphabetically, I am reordering here to match the original study
hip_mom_data_long$conditions <- forcats::fct_relevel(hip_mom_data_long$conditions, "single", "consecutive")
hip_mom_ttest <- t.test(hip_mom ~ conditions, hip_mom_data_long,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
hip_mom_ttest
# hip Pow --------------
hip_pow_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = hip_pow # the new column values
)
# create a new variable for the mean of trials 2 - 5 as per the original study
hip_pow_data_wide <-  hip_pow_data_wide %>%
rowwise() %>%
mutate(single = mean(c(`1_single`,`2_single`, `3_single`,
`4_single`, `5_single`, `6_single`)),
consecutive = mean(c(`1_consecutive`,`2_consecutive`, `3_consecutive`,
`4_consecutive`, `5_consecutive`, `6_consecutive`)))
# add differences column to wide dataset
hip_pow_data_wide <- hip_pow_data_wide %>%
select(id, single, consecutive) %>%
mutate(differences =  single - consecutive)
# long dataset
hip_pow_data_long <- hip_pow_data_wide %>%
pivot_longer(cols = c("single", "consecutive"),
names_to = "conditions",
values_to = "hip_pow")
## Descriptives  ---------------
hip_pow_desc <- hip_pow_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(hip_pow),
sd = sd(hip_pow)) %>%
mutate(mean_diff = mean(hip_pow_data_long$differences),
sd_diff = sd(hip_pow_data_long$differences))
hip_pow_desc
### Outliers check --------
hip_pow_data_long %>%
identify_outliers(differences)
## Normality check NOT NORMAL -----------
hip_pow_data_long %>% shapiro_test(differences)
## Paired t-test  -----------------------------
hip_pow_data_long$conditions <- as.factor(hip_pow_data_long$conditions)
# R compares conditions alphabetically, I am reordering here to match the original study
hip_pow_data_long$conditions <- forcats::fct_relevel(hip_pow_data_long$conditions, "single", "consecutive")
hip_pow_ttest <- t.test(hip_pow ~ conditions, hip_pow_data_long,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
hip_pow_ttest
hip_pow_data_long %>%
identify_outliers(differences)
hip_pow_data_long %>% shapiro_test(differences)
hip_mom_data_long %>%
identify_outliers(differences)
knee_pow_data_long %>%
identify_outliers(differences)
knee_agl_data_long %>%
identify_outliers(differences)
ankle_pow_data_long %>%
identify_outliers(differences)
ankle_mom_data_long %>%
identify_outliers(differences)
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
set.seed(21)
# Replication data load
rep_data <- read_csv("replication_dataLanding.csv") %>%
clean_names() %>%
mutate(trials)
head(rep_data)
# Peak landing GRF --------------
grf_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = vertical_grf # the new column values
)
# create a new variable for the mean of trials 2 - 5 as per the original study
grf_data_wide <-  grf_data_wide %>%
rowwise() %>%
mutate(single = mean(c(`1_single`,`2_single`, `3_single`,
`4_single`, `5_single`, `6_single`)),
consecutive = mean(c(`1_consecutive`,`2_consecutive`, `3_consecutive`,
`4_consecutive`, `5_consecutive`, `6_consecutive`)))
# add differences column to wide dataset
grf_data_wide <- grf_data_wide %>%
select(id, single, consecutive) %>%
mutate(differences =  single - consecutive)
# long dataset
grf_data_long <- grf_data_wide %>%
pivot_longer(cols = c("single", "consecutive"),
names_to = "conditions",
values_to = "vertical_grf")
## Descriptives  ---------------
desc <- grf_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(vertical_grf),
sd = sd(vertical_grf)) %>%
mutate(mean_diff = mean(grf_data_long$differences),
sd_diff = sd(grf_data_long$differences))
desc
## Resolving assumptions  ---------------------------------------
## Distribution check
ggplot(grf_data_long, aes(vertical_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(grf_data_long, aes(conditions, vertical_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
### Outliers check
grf_data_long %>%
identify_outliers(differences)
### Normality check
grf_data_long %>% shapiro_test(differences)
### Outlier removal ---------
# remove outlier for normal data
normal_data <- grf_data_long %>%
filter(id != 40)
### Outliers check
normal_data %>%
identify_outliers(differences)
### Normality check
normal_data %>% shapiro_test(differences)
desc_normal <- normal_data %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(vertical_grf),
sd = sd(vertical_grf)) %>%
mutate(mean_diff = mean(normal_data$differences),
sd_diff = sd(normal_data$differences))
desc_normal
### Distribution check
ggplot(normal_data, aes(vertical_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(normal_data, aes(conditions, vertical_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
# Paired t-test  -----------------------------
normal_data$conditions <- as.factor(normal_data$conditions)
# R compares conditions alphabetically, I am reordering here to match the original study
normal_data$conditions <- forcats::fct_relevel(normal_data$conditions, "single", "consecutive")
normal_replication_ttest <- t.test(vertical_grf ~ conditions, normal_data,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
normal_replication_ttest
### Replication effect size calculation ------
rep_dz <- d.dep.t.diff.t(t = normal_replication_ttest$statistic, n = desc_normal$count[1], a = 0.05)
rep_dz
## Calculate Original ES --------
#Original descriptives
ori_values <- data.frame(
ori_pval = 0.00099,
ori_N = 18,
reported_es = 1.35,
t_val = 5.14,
ori_m1 = 2.82,
ori_sd1 = 0.69,
ori_m2 = 2.09,
ori_sd2 = 0.41)
# Estimating the original effect size
ori_dz <- d.dep.t.diff.t(t = ori_values$t_val, n = ori_values$ori_N, a = 0.05)
ori_dz
ori_dav <- d.dep.t.avg(m1 = ori_values$ori_m1, m2 = ori_values$ori_m2,
sd1 = ori_values$ori_sd1, sd2 = ori_values$ori_sd2,
n = ori_values$ori_N, a = 0.05)
ori_dav
# Z-test (dz) --------
rep_test <- compare_smd(
smd1 = ori_dz$d,
n1 = ori_values$ori_N,
smd2 = rep_dz$d,
n2 = desc_normal$count[1],
paired = TRUE,
alternative = "greater")
rep_test
# Z-test (reported es) --------
rep_test <- compare_smd(
smd1 = ori_values$reported_es,
n1 = ori_values$ori_N,
smd2 = rep_dz$d,
n2 = desc_normal$count[1],
paired = TRUE,
alternative = "greater")
rep_test
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
set.seed(21)
# Replication data load
rep_data <- read_csv("replication_dataLanding.csv") %>%
clean_names() %>%
mutate(trials)
head(rep_data)
# Peak landing GRF --------------
grf_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = vertical_grf # the new column values
)
# create a new variable for the mean of trials 2 - 5 as per the original study
grf_data_wide <-  grf_data_wide %>%
rowwise() %>%
mutate(single = mean(c(`1_single`,`2_single`, `3_single`,
`4_single`, `5_single`, `6_single`)),
consecutive = mean(c(`1_consecutive`,`2_consecutive`, `3_consecutive`,
`4_consecutive`, `5_consecutive`, `6_consecutive`)))
# add differences column to wide dataset
grf_data_wide <- grf_data_wide %>%
select(id, single, consecutive) %>%
mutate(differences =  single - consecutive)
# long dataset
grf_data_long <- grf_data_wide %>%
pivot_longer(cols = c("single", "consecutive"),
names_to = "conditions",
values_to = "vertical_grf")
## Descriptives  ---------------
desc <- grf_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(vertical_grf),
sd = sd(vertical_grf)) %>%
mutate(mean_diff = mean(grf_data_long$differences),
sd_diff = sd(grf_data_long$differences))
desc
## Resolving assumptions  ---------------------------------------
## Distribution check
ggplot(grf_data_long, aes(vertical_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(grf_data_long, aes(conditions, vertical_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
### Outliers check
grf_data_long %>%
identify_outliers(differences)
### Normality check
grf_data_long %>% shapiro_test(differences)
### Outlier removal ---------
# remove outlier for normal data
normal_data <- grf_data_long %>%
filter(id != 40)
### Outliers check
normal_data %>%
identify_outliers(differences)
normal_data %>% shapiro_test(differences)
View(rep_data)
View(normal_data)
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
set.seed(21)
# Replication data load
rep_data <- read_csv("replication_dataLanding.csv") %>%
clean_names() %>%
mutate(trials)
head(rep_data)
# Peak landing GRF --------------
grf_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = vertical_grf # the new column values
)
# create a new variable for the mean of trials 2 - 5 as per the original study
grf_data_wide <-  grf_data_wide %>%
rowwise() %>%
mutate(single = mean(c(`1_single`,`2_single`, `3_single`,
`4_single`, `5_single`, `6_single`)),
consecutive = mean(c(`1_consecutive`,`2_consecutive`, `3_consecutive`,
`4_consecutive`, `5_consecutive`, `6_consecutive`)))
# add differences column to wide dataset
grf_data_wide <- grf_data_wide %>%
select(id, single, consecutive) %>%
mutate(differences =  single - consecutive)
# long dataset
grf_data_long <- grf_data_wide %>%
pivot_longer(cols = c("single", "consecutive"),
names_to = "conditions",
values_to = "vertical_grf")
## Descriptives  ---------------
desc <- grf_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(vertical_grf),
sd = sd(vertical_grf)) %>%
mutate(mean_diff = mean(grf_data_long$differences),
sd_diff = sd(grf_data_long$differences))
desc
## Resolving assumptions  ---------------------------------------
## Distribution check
ggplot(grf_data_long, aes(vertical_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(grf_data_long, aes(conditions, vertical_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
### Outliers check
grf_data_long %>%
identify_outliers(differences)
### Normality check
grf_data_long %>% shapiro_test(differences)
### Outlier removal ---------
# remove outlier for normal data
normal_data <- grf_data_long %>%
filter(id != 40)
### Outliers check
normal_data %>%
identify_outliers(differences)
### Normality check
normal_data %>% shapiro_test(differences)
desc_normal <- normal_data %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(vertical_grf),
sd = sd(vertical_grf)) %>%
mutate(mean_diff = mean(normal_data$differences),
sd_diff = sd(normal_data$differences))
desc_normal
### Distribution check
ggplot(normal_data, aes(vertical_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(normal_data, aes(conditions, vertical_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
# Paired t-test  -----------------------------
normal_data$conditions <- as.factor(normal_data$conditions)
# R compares conditions alphabetically, I am reordering here to match the original study
normal_data$conditions <- forcats::fct_relevel(normal_data$conditions, "single", "consecutive")
normal_replication_ttest <- t.test(vertical_grf ~ conditions, normal_data,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
normal_replication_ttest
### Replication effect size calculation ------
rep_dz <- d.dep.t.diff.t(t = normal_replication_ttest$statistic, n = desc_normal$count[1], a = 0.05)
rep_dz
## Calculate Original ES --------
#Original descriptives
ori_values <- data.frame(
ori_pval = 0.00099,
ori_N = 18,
reported_es = 1.35,
t_val = 5.14,
ori_m1 = 2.82,
ori_sd1 = 0.69,
ori_m2 = 2.09,
ori_sd2 = 0.41)
# Estimating the original effect size
ori_dz <- d.dep.t.diff.t(t = ori_values$t_val, n = ori_values$ori_N, a = 0.05)
ori_dz
ori_dav <- d.dep.t.avg(m1 = ori_values$ori_m1, m2 = ori_values$ori_m2,
sd1 = ori_values$ori_sd1, sd2 = ori_values$ori_sd2,
n = ori_values$ori_N, a = 0.05)
ori_dav
# Z-test (dz) --------
rep_test <- compare_smd(
smd1 = ori_dz$d,
n1 = ori_values$ori_N,
smd2 = rep_dz$d,
n2 = desc_normal$count[1],
paired = TRUE,
alternative = "greater")
rep_test
# Z-test (reported es) --------
rep_test <- compare_smd(
smd1 = ori_values$reported_es,
n1 = ori_values$ori_N,
smd2 = rep_dz$d,
n2 = desc_normal$count[1],
paired = TRUE,
alternative = "greater")
rep_test
View(desc_normal)
View(rep_dz)
