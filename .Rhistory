n2 = rep_desc$count[1],
paired = TRUE,
alternative = "greater")
rep_test
1.35-0.66
rep_data_long %>%
identify_outliers(differences)
rep_data_long %>% shapiro_test(differences)
normal_data <- rep_data_long %>%
filter(id != 3,
id != 40)
normal_data %>%
identify_outliers(differences)
normal_data %>% shapiro_test(differences)
### Distribution check
ggplot(normal_data, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(normal_data, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
# Replication data loading and prep ---------------------
rep_data <- read_csv("replication_landing_GRF.csv")
head(rep_data)
rep_data <- rep_data %>%
clean_names()
# Convert to wide dataset
rep_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = landing_grf # the new column values
)
View(rep_data_wide)
# exporting a file as a .csv
rep_data_wide %>%
select(everything()) %>%
readr::write_csv("test.csv", na="")
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
# Replication data loading and prep ---------------------
rep_data <- read_csv("replication_landing_GRF.csv")
head(rep_data)
rep_data <- rep_data %>%
clean_names()
# Convert to wide dataset
rep_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = landing_grf # the new column values
)
rep_data_wide <- rep_data_wide %>%
clean_names()
View(rep_data_wide)
# create a new variable for the mean of trials 2 - 5 as per the original study
rep_data_wide <-  rep_data_wide %>%
mutate(cmj = rowMeans(select(rep_data_wide, x2_cmj, x3_cmj, x4_cmj, x5_cmj)),
scmj = rowMeans(select(rep_data_wide, x2_scmj, x3_scmj, x4_scmj, x5_scmj)))
View(rep_data_wide)
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
# Replication data loading and prep ---------------------
rep_data <- read_csv("replication_landing_GRF.csv")
head(rep_data)
rep_data <- rep_data %>%
clean_names()
# Convert to wide dataset
rep_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = landing_grf # the new column values
)
rep_data_wide <- rep_data_wide %>%
clean_names()
# create a new variable for the mean of trials 2 - 5 as per the original study
rep_data_wide <-  rep_data_wide %>%
mutate(cmj = rowMeans(select(rep_data_wide, x2_cmj, x3_cmj, x4_cmj, x5_cmj)),
scmj = rowMeans(select(rep_data_wide, x2_scmj, x3_scmj, x4_scmj, x5_scmj)))
# add differences column to wide dataset
rep_data_wide <- rep_data_wide %>%
select(id, cmj, scmj) %>%
mutate(differences =  scmj - cmj)
# long dataset
rep_data_long <- rep_data_wide %>%
pivot_longer(cols = c("scmj", "cmj"),
names_to = "conditions",
values_to = "landing_grf")
## Replication descriptives  ---------------
rep_desc <- rep_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(landing_grf),
sd = sd(landing_grf)) %>%
mutate(mean_diff = mean(rep_data_long$differences),
sd_diff = sd(rep_data_long$differences))
## Resolving assumptions  ---------------------------------------
## Distribution check
ggplot(rep_data_long, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(rep_data_long, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
### Outliers check
rep_data_long %>%
identify_outliers(differences)
### Normality check
rep_data_long %>% shapiro_test(differences)
### Outlier removal ---------
# remove outlier for normal data
normal_data <- rep_data_long %>%
filter(id != 3,
id != 40)
### Outliers check
normal_data %>%
identify_outliers(differences)
### Normality check
normal_data %>% shapiro_test(differences)
### Distribution check
ggplot(normal_data, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(normal_data, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
# Paired t-test  -----------------------------
replication_ttest <- t.test(landing_grf ~ conditions, normal_data,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
replication_ttest
### Replication effect size calculation ------
rep_dz <- d.dep.t.diff.t(t = replication_ttest$statistic, n = rep_desc$count[1], a = 0.05)
rep_dz
### Original study values ------
ori_study <- data.frame(
ori_pval = 0.00099,
ori_N = 18,
reported_es = 1.35,
t_val = 5.14,
ori_m1 = 2.82,
ori_sd1 = 0.69,
ori_m2 = 2.09,
ori_sd2 = 0.41)
# Replication analyses - z-test --------
rep_test <- compare_smd(
smd1 = ori_study$reported_es,
n1 = ori_study$ori_N,
smd2 = rep_dz$d,
n2 = rep_desc$count[1],
paired = TRUE,
alternative = "greater")
rep_test
normal_data %>%
identify_outliers(differences)
### Normality check
normal_data %>% shapiro_test(differences)
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
# Replication data loading and prep ---------------------
rep_data <- read_csv("replication_landing_GRF.csv")
head(rep_data)
rep_data <- rep_data %>%
clean_names()
# Convert to wide dataset
rep_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = landing_grf # the new column values
)
rep_data_wide <- rep_data_wide %>%
clean_names()
# create a new variable for the mean of trials 2 - 5 as per the original study
rep_data_wide <-  rep_data_wide %>%
mutate(cmj = rowMeans(select(rep_data_wide, x2_cmj, x3_cmj, x4_cmj, x5_cmj)),
scmj = rowMeans(select(rep_data_wide, x2_scmj, x3_scmj, x4_scmj, x5_scmj)))
# add differences column to wide dataset
rep_data_wide <- rep_data_wide %>%
select(id, cmj, scmj) %>%
mutate(differences =  scmj - cmj)
# long dataset
rep_data_long <- rep_data_wide %>%
pivot_longer(cols = c("scmj", "cmj"),
names_to = "conditions",
values_to = "landing_grf")
## Replication descriptives  ---------------
rep_desc <- rep_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(landing_grf),
sd = sd(landing_grf)) %>%
mutate(mean_diff = mean(rep_data_long$differences),
sd_diff = sd(rep_data_long$differences))
## Resolving assumptions  ---------------------------------------
## Distribution check
ggplot(rep_data_long, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(rep_data_long, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
### Outliers check
rep_data_long %>%
identify_outliers(differences)
### Normality check
rep_data_long %>% shapiro_test(differences)
### Outlier removal ---------
# remove outlier for normal data
normal_data <- rep_data_long %>%
filter(id != 40)
### Outliers check
normal_data %>%
identify_outliers(differences)
### Normality check
normal_data %>% shapiro_test(differences)
### Distribution check
ggplot(normal_data, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(normal_data, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
# Paired t-test  -----------------------------
replication_ttest <- t.test(landing_grf ~ conditions, normal_data,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
replication_ttest
### Replication effect size calculation ------
rep_dz <- d.dep.t.diff.t(t = replication_ttest$statistic, n = rep_desc$count[1], a = 0.05)
rep_dz
### Original study values ------
ori_study <- data.frame(
ori_pval = 0.00099,
ori_N = 18,
reported_es = 1.35,
t_val = 5.14,
ori_m1 = 2.82,
ori_sd1 = 0.69,
ori_m2 = 2.09,
ori_sd2 = 0.41)
# Replication analyses - z-test --------
rep_test <- compare_smd(
smd1 = ori_study$reported_es,
n1 = ori_study$ori_N,
smd2 = rep_dz$d,
n2 = rep_desc$count[1],
paired = TRUE,
alternative = "greater")
rep_test
### Normality check
normal_data %>% shapiro_test(differences)
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
# Replication data loading and prep ---------------------
rep_data <- read_csv("replication_landing_GRF.csv")
head(rep_data)
rep_data <- rep_data %>%
clean_names()
# Convert to wide dataset
rep_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = landing_grf # the new column values
)
rep_data_wide <- rep_data_wide %>%
clean_names()
# create a new variable for the mean of trials 2 - 5 as per the original study
rep_data_wide <-  rep_data_wide %>%
mutate(cmj = rowMeans(select(rep_data_wide, x2_cmj, x3_cmj, x4_cmj, x5_cmj)),
scmj = rowMeans(select(rep_data_wide, x2_scmj, x3_scmj, x4_scmj, x5_scmj)))
# add differences column to wide dataset
rep_data_wide <- rep_data_wide %>%
select(id, cmj, scmj) %>%
mutate(differences =  scmj - cmj)
# long dataset
rep_data_long <- rep_data_wide %>%
pivot_longer(cols = c("scmj", "cmj"),
names_to = "conditions",
values_to = "landing_grf")
## Replication descriptives  ---------------
rep_desc <- rep_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(landing_grf),
sd = sd(landing_grf)) %>%
mutate(mean_diff = mean(rep_data_long$differences),
sd_diff = sd(rep_data_long$differences))
## Resolving assumptions  ---------------------------------------
## Distribution check
ggplot(rep_data_long, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(rep_data_long, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
### Outliers check
rep_data_long %>%
identify_outliers(differences)
### Normality check
rep_data_long %>% shapiro_test(differences)
normal_data <- rep_data_long %>%
filter(id != 40)
# remove outlier for normal data
normal_data <- rep_data_long %>%
filter(id != 40)
### Outliers check
normal_data %>%
identify_outliers(differences)
normal_data %>% shapiro_test(differences)
rep_desc_normal <- normal_data %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(landing_grf),
sd = sd(landing_grf)) %>%
mutate(mean_diff = mean(rep_data_long$differences),
sd_diff = sd(rep_data_long$differences))
rep_desc_normal
View(normal_data)
replication_ttest <- t.test(landing_grf ~ conditions, normal_data,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
replication_ttest
rep_dz <- d.dep.t.diff.t(t = replication_ttest$statistic, n = rep_desc$count[1], a = 0.05)
rep_dz
View(rep_desc)
View(normal_data)
View(rep_data)
View(rep_data_wide)
rep_data_wide %>%
select(everything()) %>%
readr::write_csv("test.csv", na="")
View(rep_desc_normal)
View(rep_desc)
rep_dz <- d.dep.t.diff.t(t = replication_ttest$statistic, n = rep_desc$count[1], a = 0.05)
rep_dz
View(replication_ttest)
rep_test <- compare_smd(
smd1 = ori_study$reported_es,
n1 = ori_study$ori_N,
smd2 = rep_dz$d,
n2 = rep_desc$count[1],
paired = TRUE,
alternative = "greater")
### Original study values ------
ori_study <- data.frame(
ori_pval = 0.00099,
ori_N = 18,
reported_es = 1.35,
t_val = 5.14,
ori_m1 = 2.82,
ori_sd1 = 0.69,
ori_m2 = 2.09,
ori_sd2 = 0.41)
# Replication analyses - z-test --------
rep_test <- compare_smd(
smd1 = ori_study$reported_es,
n1 = ori_study$ori_N,
smd2 = rep_dz$d,
n2 = rep_desc$count[1],
paired = TRUE,
alternative = "greater")
rep_test
rep_test <- compare_smd(
smd1 = ori_study$reported_es,
n1 = ori_study$ori_N,
smd2 = -rep_dz$d,
n2 = rep_desc$count[1],
paired = TRUE,
alternative = "greater")
rep_test
rep_dz <- d.dep.t.diff.t(t = replication_ttest$statistic, n = rep_desc$count[1], a = 0.05)
rep_dz
rep_dz <- d.dep.t.diff.t(t = replication_ttest$statistic, n = rep_desc_normal$count[1], a = 0.05)
rep_dz
# Load packages
library(stats)
library(rstatix)
library(TOSTER)
library(MOTE)
library(tidyverse)
library(janitor)
# Replication data loading and prep ---------------------
rep_data <- read_csv("replication_landing_GRF.csv")
head(rep_data)
rep_data <- rep_data %>%
clean_names()
# Convert to wide dataset
rep_data_wide <-  pivot_wider(
data = rep_data,
id_cols = id, # identifying column(s)
names_from = c("trials", "conditions"), # the new column names
values_from = landing_grf # the new column values
)
rep_data_wide <- rep_data_wide %>%
clean_names()
# create a new variable for the mean of trials 2 - 5 as per the original study
rep_data_wide <-  rep_data_wide %>%
mutate(cmj = rowMeans(select(rep_data_wide, x2_cmj, x3_cmj, x4_cmj, x5_cmj)),
scmj = rowMeans(select(rep_data_wide, x2_scmj, x3_scmj, x4_scmj, x5_scmj)))
# add differences column to wide dataset
rep_data_wide <- rep_data_wide %>%
select(id, cmj, scmj) %>%
mutate(differences =  scmj - cmj)
# long dataset
rep_data_long <- rep_data_wide %>%
pivot_longer(cols = c("scmj", "cmj"),
names_to = "conditions",
values_to = "landing_grf")
## Replication descriptives  ---------------
rep_desc <- rep_data_long %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(landing_grf),
sd = sd(landing_grf)) %>%
mutate(mean_diff = mean(rep_data_long$differences),
sd_diff = sd(rep_data_long$differences))
## Resolving assumptions  ---------------------------------------
## Distribution check
ggplot(rep_data_long, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(rep_data_long, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
### Outliers check
rep_data_long %>%
identify_outliers(differences)
### Normality check
rep_data_long %>% shapiro_test(differences)
### Outlier removal ---------
# remove outlier for normal data
normal_data <- rep_data_long %>%
filter(id != 40)
### Outliers check
normal_data %>%
identify_outliers(differences)
### Normality check
normal_data %>% shapiro_test(differences)
rep_desc_normal <- normal_data %>%
group_by(conditions) %>%
summarise(count = n(),
mean = mean(landing_grf),
sd = sd(landing_grf)) %>%
mutate(mean_diff = mean(rep_data_long$differences),
sd_diff = sd(rep_data_long$differences))
rep_desc_normal
### Distribution check
ggplot(normal_data, aes(landing_grf)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(normal_data, aes(conditions, landing_grf, color = conditions)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
# Paired t-test  -----------------------------
replication_ttest <- t.test(landing_grf ~ conditions, normal_data,
alternative = "two.sided", paired = TRUE, conf.level = 0.95) %>%
tidy()
replication_ttest
### Replication effect size calculation ------
rep_dz <- d.dep.t.diff.t(t = replication_ttest$statistic, n = rep_desc_normal$count[1], a = 0.05)
rep_dz
### Original study values ------
ori_study <- data.frame(
ori_pval = 0.00099,
ori_N = 18,
reported_es = 1.35,
t_val = 5.14,
ori_m1 = 2.82,
ori_sd1 = 0.69,
ori_m2 = 2.09,
ori_sd2 = 0.41)
# Replication analyses - z-test --------
rep_test <- compare_smd(
smd1 = ori_study$reported_es,
n1 = ori_study$ori_N,
smd2 = -rep_dz$d,
n2 = rep_desc$count[1],
paired = TRUE,
alternative = "greater")
rep_test
View(rep_desc_normal)
View(replication_ttest)
